[comment encoding = UTF-8 /]
[module toLTL('http://simplepdl')]


[template public processToLTL(aProcess : Process)]
[comment @main/]
[file (aProcess.name + '.ltl', false, 'UTF-8')]

finished = [let wds : Sequence(WorkDefinition) = aProcess.getWDs() -> asSequence()]
    [wds->first().name/]_finished [for (wd : WorkDefinition | wds->subSequence(2,wds->size()))]
		[wd.Terminaison()/]
	[/for]
[/let]
['[]'/] <> finished;
- <> finished;
[let wds : OrderedSet(WorkDefinition) = aProcess.getWDs() ]
	[for (wd : WorkDefinition | wds)]
		[wd.AssureEtatUnique()/]
	[/for]
[/let]

[/file]
[/template]

[query public getWDs(p: Process) : OrderedSet(WorkDefinition) = 
	p.processElements->select( e | e.oclIsTypeOf(WorkDefinition) )
		->collect( e | e.oclAsType(WorkDefinition) )
		->asOrderedSet()
/]

[template public AssureEtatUnique(wd : WorkDefinition) post (trim()) ]
	['[]'/]([wd.name /]_idle + [wd.name /]_running + [wd.name /]_finished = 1);
[/template]

[template public Terminaison(wd : WorkDefinition) post (trim()) ]
	/\ [wd.name /]_finished
[/template]
